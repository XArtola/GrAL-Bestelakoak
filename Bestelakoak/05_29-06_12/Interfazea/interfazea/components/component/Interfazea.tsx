'use client'
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/cyT4oEsUPPx
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import Link from "next/link"
import { ResponsiveBar } from "@nivo/bar"
import { JSX, ClassAttributes, HTMLAttributes, SVGProps } from "react"

export function Interfazea() {
  return (
    <div className="min-h-screen bg-[#0d1117] text-white grid grid-cols-[260px_1fr]">
      <div className="bg-[#161b22] border-r border-[#30363d] flex flex-col">
        <div className="flex h-[60px] items-center px-6 border-b border-[#30363d]">
          <Link className="flex items-center gap-2 font-semibold" href="#">
            <MountainIcon className="h-6 w-6" />
            <span>Firebase</span>
          </Link>
        </div>
        <nav className="flex-1 grid gap-2 px-4 py-4">
          <Link
            className="flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-100 hover:cursor-pointer"
            href="#"
          >
            <HomeIcon className="h-4 w-4" />
            <span>Home</span>
          </Link>
          <Link
            className="flex items-center gap-3 rounded-lg bg-[#0d1117] px-3 py-2 text-white transition-all hover:bg-[#161b22] hover:cursor-pointer"
            href="#"
          >
            <PackageIcon className="h-4 w-4" />
            <span>Projects</span>
          </Link>
          <Link
            className="flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-100 hover:cursor-pointer"
            href="#"
          >
            <DatabaseIcon className="h-4 w-4" />
            <span>Database</span>
          </Link>
          <Link
            className="flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-100 hover:cursor-pointer"
            href="#"
          >
            <InfoIcon className="h-4 w-4" />
            <span>Analytics</span>
          </Link>
          <Link
            className="flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-100 hover:cursor-pointer"
            href="#"
          >
            <PowerIcon className="h-4 w-4" />
            <span>Settings</span>
          </Link>
        </nav>
      </div>
      <main className="px-8 py-4">
        <section className="mb-8">
          <h1 className="text-2xl font-bold mb-4">Tus proyectos de Firebase</h1>
          <div className="grid grid-cols-3 gap-4">
            <div className="flex flex-col items-center justify-center p-4 bg-[#1f2937] rounded-lg hover:bg-[#2f3a4b] hover:cursor-pointer">
              <PlusIcon className="h-8 w-8 mb-2" />
              <span>Agregar proyecto</span>
            </div>
          </div>
        </section>
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
          <div className="bg-[#1f2937] rounded-lg p-6 w-full max-w-md">
            <h2 className="text-xl font-bold mb-4">Crear nuevo proyecto</h2>
            <div className="bg-red-500 text-white p-2 rounded-md mb-4" />
            <div className="space-y-4">
              <div>
                <label className="block mb-2" htmlFor="project-name">
                  Nombre del proyecto
                </label>
                <input className="bg-[#2f3a4b] rounded-md px-3 py-2 w-full" id="project-name" type="text" />
              </div>
              <div>
                <label className="block mb-2" htmlFor="github-url">
                  URL de GitHub
                </label>
                <input className="bg-[#2f3a4b] rounded-md px-3 py-2 w-full" id="github-url" type="text" />
              </div>
              <div className="flex justify-end">
                <button className="bg-[#0d1117] rounded-md px-4 py-2 hover:bg-[#161b22]">Crear</button>
                <button className="bg-[#2f3a4b] rounded-md px-4 py-2 ml-4 hover:bg-[#3b4a5b]">Cancelar</button>
              </div>
            </div>
          </div>
        </div>
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
          <div className="bg-[#1f2937] rounded-lg p-6 w-full max-w-md">
            <h2 className="text-xl font-bold mb-4" />
            <div className="grid grid-cols-2 gap-4">
              <div>
                <BarChart className="aspect-[4/3]" />
              </div>
              <div>
                <table className="w-full">
                  <thead>
                    <tr>
                      <th className="text-left pb-2">Test</th>
                      <th className="text-left pb-2">Status</th>
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>
            </div>
            <div className="flex justify-end mt-4">
              <button className="bg-[#2f3a4b] rounded-md px-4 py-2 hover:bg-[#3b4a5b]">Close</button>
            </div>
          </div>
        </div>
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
          <div className="bg-[#1f2937] rounded-lg p-6 w-full max-w-md">
            <h2 className="text-xl font-bold mb-4"> - </h2>
            <div className="space-y-4">
              <p>This is a detailed description of the test and its results.</p>
              <div className="flex justify-end">
                <button className="bg-[#2f3a4b] rounded-md px-4 py-2 hover:bg-[#3b4a5b]">Close</button>
              </div>
            </div>
          </div>
        </div>
        <footer className="flex items-center justify-between p-4 border-t border-[#30363d]">
          <div className="flex items-center" />
        </footer>
      </main>
    </div>
  )
}

function BarChart(props: JSX.IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          { name: "Jan", count: 111 },
          { name: "Feb", count: 157 },
          { name: "Mar", count: 129 },
          { name: "Apr", count: 150 },
          { name: "May", count: 119 },
          { name: "Jun", count: 72 },
        ]}
        keys={["count"]}
        indexBy="name"
        margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
        padding={0.3}
        colors={["#2563eb"]}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 4,
          tickPadding: 16,
        }}
        gridYValues={4}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        tooltipLabel={({ id }) => `${id}`}
        enableLabel={false}
        role="application"
        ariaLabel="A bar chart showing data"
      />
    </div>
  )
}


function DatabaseIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <ellipse cx="12" cy="5" rx="9" ry="3" />
      <path d="M3 5V19A9 3 0 0 0 21 19V5" />
      <path d="M3 12A9 3 0 0 0 21 12" />
    </svg>
  )
}


function HomeIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
      <polyline points="9 22 9 12 15 12 15 22" />
    </svg>
  )
}


function InfoIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <path d="M12 16v-4" />
      <path d="M12 8h.01" />
    </svg>
  )
}


function MountainIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}


function PackageIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m7.5 4.27 9 5.15" />
      <path d="M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z" />
      <path d="m3.3 7 8.7 5 8.7-5" />
      <path d="M12 22V12" />
    </svg>
  )
}


function PlusIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}


function PowerIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 2v10" />
      <path d="M18.4 6.6a9 9 0 1 1-12.77.04" />
    </svg>
  )
}
